~~~~~~~~~~~~~~~~~~~~~~~~ NOTES/TODO ~~~~~~~~~~~~~~~~~~~~~~~~

-Similar to all the 'Not a Problem's below, getting the queue for a course that doesn't exist simply returns
'state:closed'. If we decided to explicitly store closed queues in queue_state, we could return that the course
doesn't exist still in one SQL call. Again, this isn't real high priority and is sorta convention. But I think
ideally the messages returned from our API will give accurate info, so the caller of the API doesn't think,
for example, that a queue is closed even though the queue doesn't even exist.
-max on duty TAs box wider so a name doesn't take two lines to display
-We need a team logo (Jim)
-make student question optionally visible to other students?
-set Announcements and On Duty TA boxes at a constant size (instead of growing/shrinking) and use scroll bar when necessary
-on All Classes page, color code enroll and leave options (e.g. Enroll=green, Leave=red)
-automatic location generation when entering queue
-TA/faculty toggle abilities (e.g. does logging out remove you from queue)
-Have different background colors for TAs
-Have CIS handle authentication
-Spinners or progress/waiting indicators for slow loads
-Success is falsely returned when a student (or TA) removes self (or another student) from a non-existent class.
-Should logging out remove you from all queues?
-Not a Problem: In our DB courses table, does the name need to include the dept and course num? Is this redundant?
-Not a Problem: Dequeuing a student from a queue they’re not in returns success. Problem?
-Not a Problem: Removing a course that a student’s not enrolled in returns success. Problem?
-Not a Problem: Adding a course that a student’s already enrolled in returns success. Problem?
What convention should we use? 
-Lock navbar in place when scrolling
-Consider using web sockets and events so server can push changes instead clients pulling from server every 5 seconds
-TA/faculty ability to delete announcements
-Some of our endpoints might be better suited for other operations, e.g. GET get_queue.php
-Probably isn't a problem, but the 'Try it out' functionality on the swagger UI only works when the UI is running
on our server (which is mainly how it will be used anyway). It doesn't work when running the UI from swagger editor
on my (Blake) laptop.

~~~~~~~~~~~~~~~~~~~~~~~~ EMAIL FROM ERIN PARKER ~~~~~~~~~~~~~~~~~~~~~~~~

Daniel,
In a meeting with some of my TAs this morning, the topic of the TA call queue came up and I took the opportunity to get
some ideas from them on what they would like to see in a new app.  Here are some notes.  Feel free to ask about anything
that does not make sense.

Done: -Ensure that only students currently enrolled in the class can sign in (with an access code or something). It doesn't
happen much, but occasionally students from the wrong class sign in.

-Include a utility for TAs to directly message students currently in the queue (collectively or individually). This can be
useful if a student's location is incorrect, or to warn that TA hours are ending soon.

-(This is a bit specific to CS at the U, but...)  Have a map of the CADE lab to show where students in the queue are sitting,
so the TA can locate them quickly.

-Include push notifications to the TAs on duty for when a student enters the queue.  During slow times, when the queue is empty,
some TAs are late noticing that a student has entered.

-Allow a TA-supplied list of common issues/questions for students to choose from when entering the queue, to make it easier to
answer for a group of students.

Done: -When students enter the queue, have a "subject" line to fill (in addition to name and location).

-Allow TAs to reorder the queue and undo removing a student.

-Capture a history/activity log for a session, for TAs and instructors to look at later and assess things like how long a TA is
spending with students, which students use the queue most often, etc.

